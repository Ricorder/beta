{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"./Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Field from \"./Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthForm = function AuthForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var authHandler = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (email && password) {\n        if (email !== 'test@test.ru') {\n          return setError('Не верный Email');\n        }\n\n        if (password !== '12345') {\n          return setError('Не верный пароль');\n        }\n\n        yield AsyncStorage.setItem('token', 'w23eefq234Ad');\n        setIsAuth(true);\n      } else {\n        setError('Заполните все поля!');\n      }\n    });\n\n    return function authHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: styles.auth,\n    children: [_jsx(Field, {\n      value: email,\n      onChangeText: setEmail,\n      placeholder: \"Email..\"\n    }), _jsx(Field, {\n      value: password,\n      onChangeText: setPassword,\n      placeholder: \"Password..\"\n    }), _jsx(Button, {\n      onPress: authHandler,\n      title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  auth: {\n    paddingTop: '13%',\n    backgroundColor: 'rgb(22, 50, 89)',\n    height: '100%'\n  }\n});\nexport default AuthForm;","map":{"version":3,"names":["useContext","useState","Button","AsyncStorage","Field","AuthForm","email","setEmail","password","setPassword","error","setError","authHandler","setItem","setIsAuth","styles","auth","StyleSheet","create","paddingTop","backgroundColor","height"],"sources":["C:/Users/e.kolesnikov/Documents/GitHub/blank/app/AuthForm.jsx"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { StyleSheet, View } from 'react-native'\n// import { useAuth } from '../../useAuth'\nimport Button from './Button'\n// import Error from '../UI/Error'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport Field from './Field'\n\nconst AuthForm = () => {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [error, setError] = useState('')\n\n\t// const { isAuth, setIsAuth } = useAuth()\n\n\tconst authHandler = async () => {\n\t\tif (email && password) {\n\t\t\tif (email !== 'test@test.ru') {\n\t\t\t\treturn setError('Не верный Email')\n\t\t\t}\n\n\t\t\tif (password !== '12345') {\n\t\t\t\treturn setError('Не верный пароль')\n\t\t\t}\n\n\t\t\tawait AsyncStorage.setItem('token', 'w23eefq234Ad')\n\t\t\tsetIsAuth(true)\n\t\t\t\n\t\t} else {\n\t\t\tsetError('Заполните все поля!')\n\t\t}\n\t}\n\n\treturn (\n\t\t<View style={styles.auth}>\n\t\t\t{/* {error && <Error message={error} />} */}\n\n\t\t\t<Field value={email} onChangeText={setEmail} placeholder='Email..' />\n\t\t\t<Field\n\t\t\t\tvalue={password}\n\t\t\t\tonChangeText={setPassword}\n\t\t\t\tplaceholder='Password..'\n\t\t\t/>\n\t\t\t<Button onPress={authHandler} title='Войти' />\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({\n\tauth: {\n\t\tpaddingTop: '13%',\n\t\tbackgroundColor: 'rgb(22, 50, 89)',\n\t\theight: '100%',\n\t},\n})\n\nexport default AuthForm\n"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;;;AAGA,OAAOC,MAAP;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACtB,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCN,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA0BR,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EAIA,IAAMC,WAAW;IAAA,6BAAG,aAAY;MAC/B,IAAIN,KAAK,IAAIE,QAAb,EAAuB;QACtB,IAAIF,KAAK,KAAK,cAAd,EAA8B;UAC7B,OAAOK,QAAQ,CAAC,iBAAD,CAAf;QACA;;QAED,IAAIH,QAAQ,KAAK,OAAjB,EAA0B;UACzB,OAAOG,QAAQ,CAAC,kBAAD,CAAf;QACA;;QAED,MAAMR,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8B,cAA9B,CAAN;QACAC,SAAS,CAAC,IAAD,CAAT;MAEA,CAZD,MAYO;QACNH,QAAQ,CAAC,qBAAD,CAAR;MACA;IACD,CAhBgB;;IAAA,gBAAXC,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAkBA,OACC,MAAC,IAAD;IAAM,KAAK,EAAEG,MAAM,CAACC,IAApB;IAAA,WAGC,KAAC,KAAD;MAAO,KAAK,EAAEV,KAAd;MAAqB,YAAY,EAAEC,QAAnC;MAA6C,WAAW,EAAC;IAAzD,EAHD,EAIC,KAAC,KAAD;MACC,KAAK,EAAEC,QADR;MAEC,YAAY,EAAEC,WAFf;MAGC,WAAW,EAAC;IAHb,EAJD,EASC,KAAC,MAAD;MAAQ,OAAO,EAAEG,WAAjB;MAA8B,KAAK,EAAC;IAApC,EATD;EAAA,EADD;AAaA,CAtCD;;AAwCA,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAChCF,IAAI,EAAE;IACLG,UAAU,EAAE,KADP;IAELC,eAAe,EAAE,iBAFZ;IAGLC,MAAM,EAAE;EAHH;AAD0B,CAAlB,CAAf;AAQA,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}