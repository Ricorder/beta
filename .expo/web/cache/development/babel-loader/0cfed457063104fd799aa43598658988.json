{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useAuth } from \"../../useAuth\";\nimport Button from \"../UI/Button\";\nimport Error from \"../UI/Error\";\nimport Field from \"../UI/Field\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthForm = function AuthForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useAuth = useAuth(),\n      isAuth = _useAuth.isAuth,\n      setIsAuth = _useAuth.setIsAuth;\n\n  var authHandler = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (email && password) {\n        if (email !== 'test@test.ru') {\n          return setError('Не верный Email');\n        }\n\n        if (password !== '12345') {\n          return setError('Не верный пароль');\n        }\n\n        setIsAuth(true);\n      } else {\n        setError('Заполните все поля!');\n      }\n    });\n\n    return function authHandler() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    children: [_jsx(Field, {\n      value: email,\n      onChangeText: setEmail,\n      placeholder: \"Email..\"\n    }), _jsx(Field, {\n      value: password,\n      onChangeText: setPassword,\n      placeholder: \"Password..\"\n    }), _jsx(Button, {\n      onPress: authHandler,\n      title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    })]\n  });\n};\n\nexport default AuthForm;","map":{"version":3,"names":["React","useContext","useState","useAuth","Button","Error","Field","AuthForm","email","setEmail","password","setPassword","error","setError","isAuth","setIsAuth","authHandler"],"sources":["C:/Users/e.kolesnikov/Documents/GitHub/blank/app/AuthForm.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { useAuth } from '../../useAuth'\nimport Button from '../UI/Button'\nimport Error from '../UI/Error'\n// import AsyncStorage from '@react-native-async-storage/async-storage'\nimport Field from '../UI/Field'\n\nconst AuthForm = () => {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [error, setError] = useState('')\n\n\tconst { isAuth, setIsAuth } = useAuth()\n\n\tconst authHandler = async () => {\n\t\tif (email && password) {\n\t\t\tif (email !== 'test@test.ru') {\n\t\t\t\treturn setError('Не верный Email')\n\t\t\t}\n\n\t\t\tif (password !== '12345') {\n\t\t\t\treturn setError('Не верный пароль')\n\t\t\t}\n\n\t\t\t// await AsyncStorage.setItem('token', 'w23eefq234Ad')\n\t\t\tsetIsAuth(true)\n\t\t} else {\n\t\t\tsetError('Заполните все поля!')\n\t\t}\n\t}\n\n\treturn (\n\t\t<View>\n\t\t\t{/* {error && <Error message={error} />} */}\n\n\t\t\t<Field value={email} onChangeText={setEmail} placeholder='Email..' />\n\t\t\t<Field\n\t\t\t\tvalue={password}\n\t\t\t\tonChangeText={setPassword}\n\t\t\t\tplaceholder='Password..'\n\t\t\t/>\n\t\t\t<Button onPress={authHandler} title='Войти' />\n\t\t</View>\n\t)\n}\n\n\nexport default AuthForm\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,SAASC,OAAT;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AAEA,OAAOC,KAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACtB,gBAA0BL,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOM,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCP,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOQ,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA0BT,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOU,KAAP;EAAA,IAAcC,QAAd;;EAEA,eAA8BV,OAAO,EAArC;EAAA,IAAQW,MAAR,YAAQA,MAAR;EAAA,IAAgBC,SAAhB,YAAgBA,SAAhB;;EAEA,IAAMC,WAAW;IAAA,6BAAG,aAAY;MAC/B,IAAIR,KAAK,IAAIE,QAAb,EAAuB;QACtB,IAAIF,KAAK,KAAK,cAAd,EAA8B;UAC7B,OAAOK,QAAQ,CAAC,iBAAD,CAAf;QACA;;QAED,IAAIH,QAAQ,KAAK,OAAjB,EAA0B;UACzB,OAAOG,QAAQ,CAAC,kBAAD,CAAf;QACA;;QAGDE,SAAS,CAAC,IAAD,CAAT;MACA,CAXD,MAWO;QACNF,QAAQ,CAAC,qBAAD,CAAR;MACA;IACD,CAfgB;;IAAA,gBAAXG,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAiBA,OACC,MAAC,IAAD;IAAA,WAGC,KAAC,KAAD;MAAO,KAAK,EAAER,KAAd;MAAqB,YAAY,EAAEC,QAAnC;MAA6C,WAAW,EAAC;IAAzD,EAHD,EAIC,KAAC,KAAD;MACC,KAAK,EAAEC,QADR;MAEC,YAAY,EAAEC,WAFf;MAGC,WAAW,EAAC;IAHb,EAJD,EASC,KAAC,MAAD;MAAQ,OAAO,EAAEK,WAAjB;MAA8B,KAAK,EAAC;IAApC,EATD;EAAA,EADD;AAaA,CArCD;;AAwCA,eAAeT,QAAf"},"metadata":{},"sourceType":"module"}