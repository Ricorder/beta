{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../../components/Button\";\nimport https from 'https';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Field from \"../../components/Field\";\nimport styles from \"./AuthForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthForm = function AuthForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('1103612'),\n      _useState2 = _slicedToArray(_useState, 2),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  var _useState3 = useState('QWE123qwe'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  axios.defaults.httpsAgent = new https.Agent({\n    rejectUnauthorized: false\n  });\n\n  var authHandler = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (login && password) {\n        var response = yield axios({\n          method: 'post',\n          url: 'http://localhost:3006/api/v1/user/signin',\n          data: {\n            login: login,\n            password: password\n          }\n        });\n\n        if (response.data) {\n          yield AsyncStorage.setItem('token', response.data.token);\n          navigation.navigate('Deposit');\n        }\n\n        setLogin('');\n        setPassword('');\n      } else {\n        setError('Заполните все поля!');\n      }\n    });\n\n    return function authHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: styles.auth,\n    children: [_jsx(Field, {\n      value: login,\n      onChangeText: setLogin,\n      placeholder: \"Login..\"\n    }), _jsx(Field, {\n      value: password,\n      onChangeText: setPassword,\n      placeholder: \"Password..\",\n      color: true\n    }), _jsx(Button, {\n      onPress: authHandler,\n      title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    })]\n  });\n};\n\nexport default AuthForm;","map":{"version":3,"names":["useState","Button","https","axios","AsyncStorage","Field","styles","AuthForm","navigation","login","setLogin","password","setPassword","defaults","httpsAgent","Agent","rejectUnauthorized","authHandler","response","method","url","data","setItem","token","navigate","setError","auth"],"sources":["C:/Users/e.kolesnikov/Documents/GitHub/alfaforex/client/app/AuthForm/AuthForm.jsx"],"sourcesContent":["import { useState } from 'react'\nimport { View } from 'react-native'\nimport Button from '../../components/Button'\nimport https from 'https'\nimport axios from 'axios'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport Field from '../../components/Field'\nimport styles from './AuthForm';\n\nconst AuthForm = ({navigation}) => {\n\tconst [login, setLogin] = useState('1103612')\n\tconst [password, setPassword] = useState('QWE123qwe')\n\n\taxios.defaults.httpsAgent = new https.Agent({\n\t\trejectUnauthorized: false\n\t})\n\n\tconst authHandler = async () => {\n\t\tif (login && password) {\n\n\t\t\t// const response = await axios({\n\t\t\t// \tmethod: 'post',\n\t\t\t// \turl: 'https://exposure-layer.trunk.alfaforex.dom/v1/security/login',\n\t\t\t// \tdata: {\n\t\t\t// \t\tlogin,\n\t\t\t// \t\tpassword\n\t\t\t// \t}\n\t\t\t// });\n\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: 'http://localhost:3006/api/v1/user/signin',\n\t\t\t\tdata: {\n\t\t\t\t\tlogin,\n\t\t\t\t\tpassword\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(response.data) {\n\t\t\t\tawait AsyncStorage.setItem('token', response.data.token)\n\t\t\t\tnavigation.navigate('Deposit')\n\t\t\t}\n\t\t\tsetLogin('');\n\t\t\tsetPassword('');\n\n\t\t} else {\n\t\t\tsetError('Заполните все поля!')\n\t\t}\n\t}\n\n\treturn (\n\t\t<View style={styles.auth}>\n\t\t\t<Field value={login} onChangeText={setLogin} placeholder='Login..' />\n\t\t\t<Field\n\t\t\t\tvalue={password}\n\t\t\t\tonChangeText={setPassword}\n\t\t\t\tplaceholder='Password..'\n\t\t\t\tcolor\n\t\t\t/>\n\t\t\t<Button onPress={authHandler} title='Войти' />\n\t\t</View>\n\t)\n}\n\nexport default AuthForm\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EAClC,gBAA0BR,QAAQ,CAAC,SAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCV,QAAQ,CAAC,WAAD,CAAxC;EAAA;EAAA,IAAOW,QAAP;EAAA,IAAiBC,WAAjB;;EAEAT,KAAK,CAACU,QAAN,CAAeC,UAAf,GAA4B,IAAIZ,KAAK,CAACa,KAAV,CAAgB;IAC3CC,kBAAkB,EAAE;EADuB,CAAhB,CAA5B;;EAIA,IAAMC,WAAW;IAAA,8BAAG,aAAY;MAC/B,IAAIR,KAAK,IAAIE,QAAb,EAAuB;QAWtB,IAAMO,QAAQ,SAASf,KAAK,CAAC;UAC5BgB,MAAM,EAAE,MADoB;UAE5BC,GAAG,EAAE,0CAFuB;UAG5BC,IAAI,EAAE;YACLZ,KAAK,EAALA,KADK;YAELE,QAAQ,EAARA;UAFK;QAHsB,CAAD,CAA5B;;QASA,IAAGO,QAAQ,CAACG,IAAZ,EAAkB;UACjB,MAAMjB,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACG,IAAT,CAAcE,KAA5C,CAAN;UACAf,UAAU,CAACgB,QAAX,CAAoB,SAApB;QACA;;QACDd,QAAQ,CAAC,EAAD,CAAR;QACAE,WAAW,CAAC,EAAD,CAAX;MAEA,CA3BD,MA2BO;QACNa,QAAQ,CAAC,qBAAD,CAAR;MACA;IACD,CA/BgB;;IAAA,gBAAXR,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAiCA,OACC,MAAC,IAAD;IAAM,KAAK,EAAEX,MAAM,CAACoB,IAApB;IAAA,WACC,KAAC,KAAD;MAAO,KAAK,EAAEjB,KAAd;MAAqB,YAAY,EAAEC,QAAnC;MAA6C,WAAW,EAAC;IAAzD,EADD,EAEC,KAAC,KAAD;MACC,KAAK,EAAEC,QADR;MAEC,YAAY,EAAEC,WAFf;MAGC,WAAW,EAAC,YAHb;MAIC,KAAK;IAJN,EAFD,EAQC,KAAC,MAAD;MAAQ,OAAO,EAAEK,WAAjB;MAA8B,KAAK,EAAC;IAApC,EARD;EAAA,EADD;AAYA,CArDD;;AAuDA,eAAeV,QAAf"},"metadata":{},"sourceType":"module"}